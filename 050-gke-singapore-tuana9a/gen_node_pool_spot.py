#!/usr/bin/env python3

from string import Template

tmpl = Template("""# generated by gen_node_pool_spot.py
resource "google_container_node_pool" "node_pool_spot_$instance_type_snake_case" {
  name     = "node-pool-spot-$instance_type_kebab_case"
  location = google_container_cluster.zero.location
  cluster  = google_container_cluster.zero.name

  autoscaling {
    total_min_node_count = $total_min_node_count
    total_max_node_count = $total_max_node_count
  }

  network_config {
    enable_private_nodes = true
  }

  node_config {
    spot         = true
    machine_type = "$instance_type"
    disk_size_gb = 20
  }
}
""")

node_pools = [
    {
        "instance_type": "e2-medium",
        "total_min_node_count": 0,
        "total_max_node_count": 2,
        "enabled": True
    },
    {
        "instance_type": "e2-highcpu-2",
        "total_min_node_count": 0,
        "total_max_node_count": 2,
    },
    {
        "instance_type": "e2-highcpu-4",
        "total_min_node_count": 0,
        "total_max_node_count": 2,
    },
]

contents = []

for x in node_pools:
    instance_type = x["instance_type"]
    x["instance_type_kebab_case"] = instance_type
    x["instance_type_snake_case"] = instance_type.replace("-", "_")
    enabled = x.get("enabled", False)
    if not enabled: continue
    content = tmpl.substitute(x)
    contents.append(content)

with open("node_pool_spot.tf", "w") as f:
    f.write("\n".join(contents))
