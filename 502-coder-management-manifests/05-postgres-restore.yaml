apiVersion: batch/v1
kind: Job
metadata:
  name: coder-postgres-restore
  namespace: coder
spec:
  template:
    spec:
      initContainers:
        - name: download
          image: amazon/aws-cli:latest
          command:
            - "sh"
            - "-c"
            - |
              echo === download dumpfile ===
              OBJECT_KEY=coder/postgres-dump-2024.12.03.06.tar.gz
              echo S3_ENDPOINT=$S3_ENDPOINT BUCKET_NAME=$BUCKET_NAME OBJECT_KEY=$OBJECT_KEY
              aws s3api --endpoint-url ${S3_ENDPOINT} get-object --bucket ${BUCKET_NAME} --key ${OBJECT_KEY} /data/dump.tar.gz
              ls -la /data/
          envFrom:
            - secretRef:
                name: coder-postgres-backup-env
          volumeMounts:
            - name: workdir
              mountPath: /data

        - name: unzip
          image: busybox:latest
          command:
            - "sh"
            - "-c"
            - |
              echo === unzip dumpfile ===
              cd /data
              tar -xzvf dump.tar.gz dump.sql
          volumeMounts:
            - name: workdir
              mountPath: /data

        - name: restore
          image: postgres:16
          command:
            - "sh"
            - "-c"
            - |
              export PGPASSWORD=$PG_PASS
              echo ========================
              psql -h $PG_HOST -p ${PG_PORT:-5432} -U $PG_USER -d $PG_DATABASE -f /data/dump.sql
          envFrom:
            - secretRef:
                name: coder-postgres-backup-env
          volumeMounts:
            - name: workdir
              mountPath: /data

      containers:
        - name: done
          image: busybox:latest
          command: ["sh", "-c", "echo done"]
      restartPolicy: Never
      volumes:
        - name: workdir
          emptyDir: {}
